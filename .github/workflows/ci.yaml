name: Continuous integration workflow
on:
  workflow_dispatch: {}
  push:
    branches:
      - main
    tags-ignore:
      - '**'
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12.19'
          cache: 'npm'

      - name: Install NPM dependencies
        run: npm install

      - name: Run unit tests with coverage
        run: npm run test:coverage

      # TODO: START: Use either SonarCloud or SonarQube for static code analysis
      # TODO: Complete TODOs in sonar-project.properties file
      - name: Static code analysis with SonarCloud scan
        uses: sonarsource/sonarcloud-github-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Static code analysis with SonarQube scan
        uses: sonarsource/sonarqube-scan-action@v1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # TODO: END

      - name: "Legal and compliance with FOSSA scan"
        uses: fossas/fossa-action@v1
        with:
          api-key: ${{secrets.fossaApiKey}}

      - name: "Legal and compliance with FOSSA test"
        uses: fossas/fossa-action@v1
        with:
          api-key: ${{secrets.fossaApiKey}}
          run-tests: true

      - name: Setup integration testing environment
        run: docker-compose --env-file .env.ci up --build

      - name: Run integration tests
        run: ./runIntegrationTestsInCi.sh

      - name: OWASP ZAP API scan
        uses: zaproxy/action-api-scan@v0.1.0
        with:
          target: generated/openapi/openApiPublicSpec.yaml

      - name: Tear down integration testing environment
        run: docker-compose --env-file .env.ci down -v

      - name: Log in to Docker registry
        uses: docker/login-action@v1
        with:
          # TODO: Change the registry
          registry: <Replace with you Docker registry FQDN or remove this line when using Docker Hub>
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Get latest git tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: getLatestTag

      - name: Set microservice version
        uses: haya14busa/action-cond@v1
        id: microserviceVersion
        with:
          cond: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/v*' }}
          if_true: "${{ steps.getLatestTag.outputs.tag }}"
          if_false: "$feature-{{ github.run_attempt }}-${{ github.sha }}"

      - name: Build and push Docker image when in feature branch
        if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/v*'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          # TODO: Change the Docker registry namespace
          tags: <docker-registry-namespace>/backk-example-microservice:${{ steps.microserviceVersion.outputs.value }}

      - name: Extract metadata for building and publish Docker image when in main or maintenance branch
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/v*'
        id: dockerImageMetadata
        uses: docker/metadata-action@v3
        with:
          # TODO: Change the Docker registry namespace
          images: <docker-registry-namespace>/backk-example-microservice

      - name: Build and push Docker image when in main or maintenance branch
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/v*'
        id: dockerImageBuildAndPush
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.dockerImageMetadata.outputs.tags }}
          labels: ${{ steps.dockerImageMetadata.outputs.labels }}

      - name: Docker image vulnerability scan
        uses: anchore/scan-action@v3
        with:
          # TODO: Change the Docker registry namespace
          image: <docker-registry-namespace>/backk-example-microservice:${{ steps.microserviceVersion.outputs.value }}
          fail-build: true
          severity-cutoff: high

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.7.0

      - name: Update helm chart versions
        run: |
          sed -i "/version: .*/version: ${{ steps.microserviceVersion.outputs.value }}/g helm/backk-example-microservice/Chart.yaml"
          sed -i "/appVersion: .*/appVersion: "${{ steps.microserviceVersion.outputs.value }}"/g helm/backk-example-microservice/Chart.yaml"

      - name: Define docker image tag
      - uses: haya14busa/action-cond@v1
        id: dockerImageTag
        with:
          cond: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/v*' }}
          if_true: "${{ steps.microserviceVersion.outputs.value }}@${{ steps.dockerImageBuildAndPush.outputs.digest }"
          if_false: "${{ steps.microserviceVersion.outputs.value }}"

      - name: Update Docker image tag in values.yaml
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/v*'
        run: |
          DOCKER_IMAGE_TAG=${{ dockerImageTag }}
          DOCKER_IMAGE_TAG=${DOCKER_IMAGE_TAG:1}
          sed -i "/tag: .*/tag: $DOCKER_IMAGE_TAG/g helm/backk-example-microservice/values.yaml"

      - name: Lint Helm chart
        run: helm lint helm/backk-example-microservice

      - name: Package and publish Helm chart
        uses: helm/chart-releaser-action@v1
        with:
          charts_dir: helm
          # TODO: Change the Helm charts repo URL, The default URL is GitHub Pages URL (https://<owner>.github.io/<this-project>)
          # charts_repo_url:
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

